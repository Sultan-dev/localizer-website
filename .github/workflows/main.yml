name: Node.js CI

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

permissions:
  id-token: write # required for OIDC authentication
  contents: read # required for checkout

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [23.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v5.0.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v3
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.WIP_PROVIDER }}
          service_account: ${{ secrets.SA }}
          credentials_json: ${{ secrets.GCP_SA_CONFIG }}
      - name: Verify GCP auth
        run: gcloud auth list

      - name: Set GCP Project
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Build and push Docker image
        run: |
          gcloud auth configure-docker ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev
          docker build -t ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/localizer-website-repo/website-image:latest .
          docker push ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/localizer-website-repo/website-image:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE_NAME }} \
            --image ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/localizer-website-repo/website-image:latest \
            --platform managed \
            --region ${{ secrets.CLOUD_RUN_REGION }} \
            --allow-unauthenticated
